using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;

namespace syntax
{
    public class TimerTes
    {
        //static void TimerCallbackMethodRLY_Magentic(uint id, uint msg, UIntPtr user, UIntPtr dw1, UIntPtr dw2)
        //MultimediaTimer.TimerCallback callback_magentic

        // Windows Multimedia Timer API
        [DllImport("winmm.dll")]
        public static extern uint timeSetEvent(uint uDelay, uint uResolution, TimerCallback lpTimeProc, UIntPtr dwUser, uint fuEvent);

        [DllImport("winmm.dll")]
        public static extern uint timeKillEvent(uint uTimerID);

        [DllImport("winmm.dll", EntryPoint = "timeBeginPeriod", SetLastError = true)]
        static extern uint TimeBeginPeriod(uint uMilliseconds);

        [DllImport("winmm.dll", EntryPoint = "timeEndPeriod", SetLastError = true)]
        static extern uint TimeEndPeriod(uint uMilliseconds);


        // TimerCallback delegate
        public delegate void TimerCallback(uint uTimerID, uint uMsg, UIntPtr dwUser, UIntPtr dw1, UIntPtr dw2);

        // Timer ID
        private uint timerID;

        // Start the multimedia timer
        public void Start(uint delay, uint resolution, TimerCallback callback)
        {
            // Set the timer event
            timerID = timeSetEvent(delay, resolution, callback, UIntPtr.Zero, 1 /* TIME_PERIODIC */);

            if (timerID == 0)
            {
                throw new Exception("Failed to start multimedia timer.");
            }
        }
     
        // Stop the multimedia timer
        public void Stop()
        {
            if (timerID != 0)
            {
                // Kill the timer event
                timeKillEvent(timerID);
                timerID = 0;
            }
        }

       
    }
}
